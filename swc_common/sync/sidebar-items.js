window.SIDEBAR_ITEMS = {"struct":[["Lazy","A value which is initialized on the first access."],["Lock",""],["LockCell",""],["Lrc","A thread-safe reference-counting pointer. ‘Arc’ stands for ‘Atomically Reference Counted’."],["OnceCell","A thread-safe cell which can be written to only once."],["RwLock",""]],"trait":[["HashMapExt",""],["Send","Types that can be transferred across thread boundaries."],["Sync","Types for which it is safe to share references between threads."]],"type":[["LockGuard","An RAII implementation of a “scoped lock” of a mutex. When this structure is dropped (falls out of scope), the lock will be unlocked."],["MappedLockGuard","An RAII mutex guard returned by `MutexGuard::map`, which can point to a subfield of the protected data."],["MappedReadGuard","An RAII read lock guard returned by `RwLockReadGuard::map`, which can point to a subfield of the protected data."],["MappedWriteGuard","An RAII write lock guard returned by `RwLockWriteGuard::map`, which can point to a subfield of the protected data."],["ReadGuard","RAII structure used to release the shared read access of a lock when dropped."],["WriteGuard","RAII structure used to release the exclusive write access of a lock when dropped."]]};