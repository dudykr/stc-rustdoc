window.SIDEBAR_ITEMS = {"enum":[["Purity",""],["Type","Type of value."],["Value","Runtime value."]],"fn":[["alias_ident_for","Used to determine super_class_ident"],["alias_if_required","Returns `(ident, aliased)`"],["calc_literal_cost",""],["class_has_side_effect",""],["collect_decls","Collects binding identifiers."],["collect_decls_with_ctxt","Collects binding identifiers, but only if it has a context which is identical to `ctxt`."],["contains_arguments",""],["contains_ident_ref",""],["contains_this_expr","This does not recurse into a function if `this` is changed by it."],["contains_top_level_await",""],["default_constructor",""],["drop_span",""],["extract_var_ids","Extracts hoisted variables"],["find_pat_ids","Finds all binding idents of `node`."],["has_rest_pat",""],["is_literal",""],["is_rest_arguments","Check if `e` is `...arguments`"],["is_valid_ident",""],["is_valid_prop_ident",""],["opt_chain_test",""],["prepend_stmt","inject `branch` after directives"],["prepend_stmts","inject `stmts` after directives"],["prop_name_eq",""],["prop_name_to_expr",""],["prop_name_to_expr_value","Similar to `prop_name_to_expr`, but used for value position."],["replace_ident","Replace all `from` in `expr` with `to`."],["to_int32","Cast to javascriptâ€™s int32"],["undefined","Creates `void 0`."]],"macro":[["member_expr","Creates a member expression."],["private_ident","Shortcut for `quote_ident!(span.apply_mark(Mark::fresh(Mark::root())), s)`"],["quote_expr",""],["quote_ident",""],["quote_str",""]],"mod":[["constructor",""],["function",""],["ident",""],["parallel","Module for parallel processing"],["var",""]],"struct":[["ArgumentsFinder",""],["BindingCollector",""],["DestructuringFinder","Finds all binding idents of variables."],["DropSpan",""],["ExprCtx",""],["Hoister",""],["IdentRefFinder",""],["IdentReplacer",""],["IdentUsageFinder","Finds usage of `ident`"],["LiteralVisitor",""],["Remapper","Variable remapper"],["RestPatVisitor",""],["ThisVisitor",""],["TopLevelAwait",""]],"trait":[["ExprExt","Extension methods for [Expr]."],["ExprFactory","Extension methods for [Expr]."],["FunctionFactory",""],["IdentExt",""],["IntoIndirectCall",""],["IsDirective",""],["IsEmpty",""],["ModuleItemLike",""],["StmtExt",""],["StmtLike",""],["StmtOrModuleItem",""]],"type":[["BoolValue",""]]};