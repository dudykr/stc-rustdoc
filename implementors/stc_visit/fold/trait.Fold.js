(function() {var implementors = {
"rnode":[],
"stc_ts_errors":[["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_types/id/struct.Id.html\" title=\"struct stc_ts_types::id::Id\">Id</a>&gt; for <a class=\"struct\" href=\"stc_ts_errors/debug/struct.Visualizer.html\" title=\"struct stc_ts_errors::debug::Visualizer\">Visualizer</a>"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_types/struct.TypeParam.html\" title=\"struct stc_ts_types::TypeParam\">TypeParam</a>&gt; for <a class=\"struct\" href=\"stc_ts_errors/debug/struct.Visualizer.html\" title=\"struct stc_ts_errors::debug::Visualizer\">Visualizer</a>"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_types/struct.IndexedAccessType.html\" title=\"struct stc_ts_types::IndexedAccessType\">IndexedAccessType</a>&gt; for <a class=\"struct\" href=\"stc_ts_errors/debug/struct.Visualizer.html\" title=\"struct stc_ts_errors::debug::Visualizer\">Visualizer</a>"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"enum\" href=\"stc_ts_types/enum.Type.html\" title=\"enum stc_ts_types::Type\">Type</a>&gt; for <a class=\"struct\" href=\"stc_ts_errors/debug/struct.Visualizer.html\" title=\"struct stc_ts_errors::debug::Visualizer\">Visualizer</a>"]],
"stc_ts_file_analyzer":[["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"enum\" href=\"stc_ts_file_analyzer/ty/enum.Type.html\" title=\"enum stc_ts_file_analyzer::ty::Type\">Type</a>&gt; for <a class=\"struct\" href=\"stc_ts_file_analyzer/analyzer/expr/call_new/struct.ReturnTypeGeneralizer.html\" title=\"struct stc_ts_file_analyzer::analyzer::expr::call_new::ReturnTypeGeneralizer\">ReturnTypeGeneralizer</a>&lt;'_, '_, '_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"enum\" href=\"stc_ts_file_analyzer/ty/enum.Type.html\" title=\"enum stc_ts_file_analyzer::ty::Type\">Type</a>&gt; for <a class=\"struct\" href=\"stc_ts_file_analyzer/analyzer/function/struct.TypeParamHandler.html\" title=\"struct stc_ts_file_analyzer::analyzer::function::TypeParamHandler\">TypeParamHandler</a>&lt;'_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_file_analyzer/ty/struct.Union.html\" title=\"struct stc_ts_file_analyzer::ty::Union\">Union</a>&gt; for <a class=\"struct\" href=\"stc_ts_file_analyzer/analyzer/generalize/struct.Simplifier.html\" title=\"struct stc_ts_file_analyzer::analyzer::generalize::Simplifier\">Simplifier</a>&lt;'_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"enum\" href=\"stc_ts_file_analyzer/ty/enum.Type.html\" title=\"enum stc_ts_file_analyzer::ty::Type\">Type</a>&gt; for <a class=\"struct\" href=\"stc_ts_file_analyzer/analyzer/generalize/struct.Simplifier.html\" title=\"struct stc_ts_file_analyzer::analyzer::generalize::Simplifier\">Simplifier</a>&lt;'_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"enum\" href=\"stc_ts_file_analyzer/ty/enum.Type.html\" title=\"enum stc_ts_file_analyzer::ty::Type\">Type</a>&gt; for <a class=\"struct\" href=\"stc_ts_file_analyzer/analyzer/generic/struct.SingleTypeParamReplacer.html\" title=\"struct stc_ts_file_analyzer::analyzer::generic::SingleTypeParamReplacer\">SingleTypeParamReplacer</a>&lt;'_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"enum\" href=\"stc_ts_file_analyzer/ty/enum.Type.html\" title=\"enum stc_ts_file_analyzer::ty::Type\">Type</a>&gt; for <a class=\"struct\" href=\"stc_ts_file_analyzer/analyzer/generic/struct.MappedReverser.html\" title=\"struct stc_ts_file_analyzer::analyzer::generic::MappedReverser\">MappedReverser</a>"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"enum\" href=\"stc_ts_file_analyzer/ty/enum.Type.html\" title=\"enum stc_ts_file_analyzer::ty::Type\">Type</a>&gt; for <a class=\"struct\" href=\"stc_ts_file_analyzer/analyzer/generic/struct.MappedIndexedSimplifier.html\" title=\"struct stc_ts_file_analyzer::analyzer::generic::MappedIndexedSimplifier\">MappedIndexedSimplifier</a>"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_file_analyzer/ty/struct.TypeParam.html\" title=\"struct stc_ts_file_analyzer::ty::TypeParam\">TypeParam</a>&gt; for <a class=\"struct\" href=\"stc_ts_file_analyzer/analyzer/scope/struct.Expander.html\" title=\"struct stc_ts_file_analyzer::analyzer::scope::Expander\">Expander</a>&lt;'_, '_, '_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_file_analyzer/ty/struct.Function.html\" title=\"struct stc_ts_file_analyzer::ty::Function\">Function</a>&gt; for <a class=\"struct\" href=\"stc_ts_file_analyzer/analyzer/scope/struct.Expander.html\" title=\"struct stc_ts_file_analyzer::analyzer::scope::Expander\">Expander</a>&lt;'_, '_, '_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_file_analyzer/ty/struct.ClassProperty.html\" title=\"struct stc_ts_file_analyzer::ty::ClassProperty\">ClassProperty</a>&gt; for <a class=\"struct\" href=\"stc_ts_file_analyzer/analyzer/scope/struct.Expander.html\" title=\"struct stc_ts_file_analyzer::analyzer::scope::Expander\">Expander</a>&lt;'_, '_, '_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_file_analyzer/ty/struct.FnParam.html\" title=\"struct stc_ts_file_analyzer::ty::FnParam\">FnParam</a>&gt; for <a class=\"struct\" href=\"stc_ts_file_analyzer/analyzer/scope/struct.Expander.html\" title=\"struct stc_ts_file_analyzer::analyzer::scope::Expander\">Expander</a>&lt;'_, '_, '_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"enum\" href=\"stc_ts_file_analyzer/ty/enum.Type.html\" title=\"enum stc_ts_file_analyzer::ty::Type\">Type</a>&gt; for <a class=\"struct\" href=\"stc_ts_file_analyzer/analyzer/scope/struct.Expander.html\" title=\"struct stc_ts_file_analyzer::analyzer::scope::Expander\">Expander</a>&lt;'_, '_, '_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_file_analyzer/ty/struct.Class.html\" title=\"struct stc_ts_file_analyzer::ty::Class\">Class</a>&gt; for <a class=\"struct\" href=\"stc_ts_file_analyzer/analyzer/scope/struct.Expander.html\" title=\"struct stc_ts_file_analyzer::analyzer::scope::Expander\">Expander</a>&lt;'_, '_, '_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"enum\" href=\"stc_ts_file_analyzer/ty/enum.ClassMember.html\" title=\"enum stc_ts_file_analyzer::ty::ClassMember\">ClassMember</a>&gt; for <a class=\"struct\" href=\"stc_ts_file_analyzer/analyzer/scope/struct.Expander.html\" title=\"struct stc_ts_file_analyzer::analyzer::scope::Expander\">Expander</a>&lt;'_, '_, '_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"enum\" href=\"stc_ts_file_analyzer/ty/enum.TypeElement.html\" title=\"enum stc_ts_file_analyzer::ty::TypeElement\">TypeElement</a>&gt; for <a class=\"struct\" href=\"stc_ts_file_analyzer/analyzer/scope/struct.Expander.html\" title=\"struct stc_ts_file_analyzer::analyzer::scope::Expander\">Expander</a>&lt;'_, '_, '_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"enum\" href=\"stc_ts_file_analyzer/ty/enum.Type.html\" title=\"enum stc_ts_file_analyzer::ty::Type\">Type</a>&gt; for <a class=\"struct\" href=\"stc_ts_file_analyzer/analyzer/stmt/return_type/struct.KeyInliner.html\" title=\"struct stc_ts_file_analyzer::analyzer::stmt::return_type::KeyInliner\">KeyInliner</a>&lt;'_, '_, '_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_file_analyzer/ty/struct.Function.html\" title=\"struct stc_ts_file_analyzer::ty::Function\">Function</a>&gt; for <a class=\"struct\" href=\"stc_ts_file_analyzer/analyzer/util/struct.Generalizer.html\" title=\"struct stc_ts_file_analyzer::analyzer::util::Generalizer\">Generalizer</a>"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"enum\" href=\"stc_ts_file_analyzer/ty/enum.Type.html\" title=\"enum stc_ts_file_analyzer::ty::Type\">Type</a>&gt; for <a class=\"struct\" href=\"stc_ts_file_analyzer/analyzer/util/struct.Generalizer.html\" title=\"struct stc_ts_file_analyzer::analyzer::util::Generalizer\">Generalizer</a>"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"enum\" href=\"stc_ts_file_analyzer/ty/enum.TypeElement.html\" title=\"enum stc_ts_file_analyzer::ty::TypeElement\">TypeElement</a>&gt; for <a class=\"struct\" href=\"stc_ts_file_analyzer/ty/type_facts/struct.TypeFactsHandler.html\" title=\"struct stc_ts_file_analyzer::ty::type_facts::TypeFactsHandler\">TypeFactsHandler</a>&lt;'_, '_, '_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"enum\" href=\"stc_ts_file_analyzer/ty/enum.ClassMember.html\" title=\"enum stc_ts_file_analyzer::ty::ClassMember\">ClassMember</a>&gt; for <a class=\"struct\" href=\"stc_ts_file_analyzer/ty/type_facts/struct.TypeFactsHandler.html\" title=\"struct stc_ts_file_analyzer::ty::type_facts::TypeFactsHandler\">TypeFactsHandler</a>&lt;'_, '_, '_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_file_analyzer/ty/struct.Function.html\" title=\"struct stc_ts_file_analyzer::ty::Function\">Function</a>&gt; for <a class=\"struct\" href=\"stc_ts_file_analyzer/ty/type_facts/struct.TypeFactsHandler.html\" title=\"struct stc_ts_file_analyzer::ty::type_facts::TypeFactsHandler\">TypeFactsHandler</a>&lt;'_, '_, '_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_file_analyzer/ty/struct.Constructor.html\" title=\"struct stc_ts_file_analyzer::ty::Constructor\">Constructor</a>&gt; for <a class=\"struct\" href=\"stc_ts_file_analyzer/ty/type_facts/struct.TypeFactsHandler.html\" title=\"struct stc_ts_file_analyzer::ty::type_facts::TypeFactsHandler\">TypeFactsHandler</a>&lt;'_, '_, '_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_file_analyzer/ty/struct.Conditional.html\" title=\"struct stc_ts_file_analyzer::ty::Conditional\">Conditional</a>&gt; for <a class=\"struct\" href=\"stc_ts_file_analyzer/ty/type_facts/struct.TypeFactsHandler.html\" title=\"struct stc_ts_file_analyzer::ty::type_facts::TypeFactsHandler\">TypeFactsHandler</a>&lt;'_, '_, '_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_file_analyzer/ty/struct.KeywordType.html\" title=\"struct stc_ts_file_analyzer::ty::KeywordType\">KeywordType</a>&gt; for <a class=\"struct\" href=\"stc_ts_file_analyzer/ty/type_facts/struct.TypeFactsHandler.html\" title=\"struct stc_ts_file_analyzer::ty::type_facts::TypeFactsHandler\">TypeFactsHandler</a>&lt;'_, '_, '_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_file_analyzer/ty/struct.Intersection.html\" title=\"struct stc_ts_file_analyzer::ty::Intersection\">Intersection</a>&gt; for <a class=\"struct\" href=\"stc_ts_file_analyzer/ty/type_facts/struct.TypeFactsHandler.html\" title=\"struct stc_ts_file_analyzer::ty::type_facts::TypeFactsHandler\">TypeFactsHandler</a>&lt;'_, '_, '_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_file_analyzer/ty/struct.Union.html\" title=\"struct stc_ts_file_analyzer::ty::Union\">Union</a>&gt; for <a class=\"struct\" href=\"stc_ts_file_analyzer/ty/type_facts/struct.TypeFactsHandler.html\" title=\"struct stc_ts_file_analyzer::ty::type_facts::TypeFactsHandler\">TypeFactsHandler</a>&lt;'_, '_, '_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_file_analyzer/ty/struct.ClassDef.html\" title=\"struct stc_ts_file_analyzer::ty::ClassDef\">ClassDef</a>&gt; for <a class=\"struct\" href=\"stc_ts_file_analyzer/ty/type_facts/struct.TypeFactsHandler.html\" title=\"struct stc_ts_file_analyzer::ty::type_facts::TypeFactsHandler\">TypeFactsHandler</a>&lt;'_, '_, '_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_file_analyzer/ty/struct.Mapped.html\" title=\"struct stc_ts_file_analyzer::ty::Mapped\">Mapped</a>&gt; for <a class=\"struct\" href=\"stc_ts_file_analyzer/ty/type_facts/struct.TypeFactsHandler.html\" title=\"struct stc_ts_file_analyzer::ty::type_facts::TypeFactsHandler\">TypeFactsHandler</a>&lt;'_, '_, '_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"enum\" href=\"stc_ts_file_analyzer/ty/enum.Type.html\" title=\"enum stc_ts_file_analyzer::ty::Type\">Type</a>&gt; for <a class=\"struct\" href=\"stc_ts_file_analyzer/ty/type_facts/struct.TypeFactsHandler.html\" title=\"struct stc_ts_file_analyzer::ty::type_facts::TypeFactsHandler\">TypeFactsHandler</a>&lt;'_, '_, '_&gt;"]],
"stc_ts_generics":[["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"enum\" href=\"stc_ts_types/enum.Type.html\" title=\"enum stc_ts_types::Type\">Type</a>&gt; for <a class=\"struct\" href=\"stc_ts_generics/expander/struct.GenericExpander.html\" title=\"struct stc_ts_generics::expander::GenericExpander\">GenericExpander</a>&lt;'_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_types/struct.CallSignature.html\" title=\"struct stc_ts_types::CallSignature\">CallSignature</a>&gt; for <a class=\"struct\" href=\"stc_ts_generics/expander/struct.GenericExpander.html\" title=\"struct stc_ts_generics::expander::GenericExpander\">GenericExpander</a>&lt;'_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_types/struct.ConstructorSignature.html\" title=\"struct stc_ts_types::ConstructorSignature\">ConstructorSignature</a>&gt; for <a class=\"struct\" href=\"stc_ts_generics/expander/struct.GenericExpander.html\" title=\"struct stc_ts_generics::expander::GenericExpander\">GenericExpander</a>&lt;'_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_types/struct.PropertySignature.html\" title=\"struct stc_ts_types::PropertySignature\">PropertySignature</a>&gt; for <a class=\"struct\" href=\"stc_ts_generics/expander/struct.GenericExpander.html\" title=\"struct stc_ts_generics::expander::GenericExpander\">GenericExpander</a>&lt;'_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_types/struct.MethodSignature.html\" title=\"struct stc_ts_types::MethodSignature\">MethodSignature</a>&gt; for <a class=\"struct\" href=\"stc_ts_generics/expander/struct.GenericExpander.html\" title=\"struct stc_ts_generics::expander::GenericExpander\">GenericExpander</a>&lt;'_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_types/struct.IndexSignature.html\" title=\"struct stc_ts_types::IndexSignature\">IndexSignature</a>&gt; for <a class=\"struct\" href=\"stc_ts_generics/expander/struct.GenericExpander.html\" title=\"struct stc_ts_generics::expander::GenericExpander\">GenericExpander</a>&lt;'_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_types/struct.ClassProperty.html\" title=\"struct stc_ts_types::ClassProperty\">ClassProperty</a>&gt; for <a class=\"struct\" href=\"stc_ts_generics/expander/struct.GenericExpander.html\" title=\"struct stc_ts_generics::expander::GenericExpander\">GenericExpander</a>&lt;'_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_types/struct.Method.html\" title=\"struct stc_ts_types::Method\">Method</a>&gt; for <a class=\"struct\" href=\"stc_ts_generics/expander/struct.GenericExpander.html\" title=\"struct stc_ts_generics::expander::GenericExpander\">GenericExpander</a>&lt;'_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"enum\" href=\"stc_ts_types/enum.Type.html\" title=\"enum stc_ts_types::Type\">Type</a>&gt; for <a class=\"struct\" href=\"stc_ts_generics/expander/struct.MappedHandler.html\" title=\"struct stc_ts_generics::expander::MappedHandler\">MappedHandler</a>&lt;'_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_types/struct.CallSignature.html\" title=\"struct stc_ts_types::CallSignature\">CallSignature</a>&gt; for <a class=\"struct\" href=\"stc_ts_generics/type_param/remover/struct.TypeParamRemover.html\" title=\"struct stc_ts_generics::type_param::remover::TypeParamRemover\">TypeParamRemover</a>&lt;'_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_types/struct.ConstructorSignature.html\" title=\"struct stc_ts_types::ConstructorSignature\">ConstructorSignature</a>&gt; for <a class=\"struct\" href=\"stc_ts_generics/type_param/remover/struct.TypeParamRemover.html\" title=\"struct stc_ts_generics::type_param::remover::TypeParamRemover\">TypeParamRemover</a>&lt;'_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_types/struct.MethodSignature.html\" title=\"struct stc_ts_types::MethodSignature\">MethodSignature</a>&gt; for <a class=\"struct\" href=\"stc_ts_generics/type_param/remover/struct.TypeParamRemover.html\" title=\"struct stc_ts_generics::type_param::remover::TypeParamRemover\">TypeParamRemover</a>&lt;'_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"stc_ts_types/struct.TypeParamDecl.html\" title=\"struct stc_ts_types::TypeParamDecl\">TypeParamDecl</a>&gt;&gt; for <a class=\"struct\" href=\"stc_ts_generics/type_param/remover/struct.TypeParamRemover.html\" title=\"struct stc_ts_generics::type_param::remover::TypeParamRemover\">TypeParamRemover</a>&lt;'_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_types/struct.TypeParam.html\" title=\"struct stc_ts_types::TypeParam\">TypeParam</a>&gt; for <a class=\"struct\" href=\"stc_ts_generics/type_param/remover/struct.TypeParamRemover.html\" title=\"struct stc_ts_generics::type_param::remover::TypeParamRemover\">TypeParamRemover</a>&lt;'_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_types/struct.Function.html\" title=\"struct stc_ts_types::Function\">Function</a>&gt; for <a class=\"struct\" href=\"stc_ts_generics/type_param/remover/struct.TypeParamRemover.html\" title=\"struct stc_ts_generics::type_param::remover::TypeParamRemover\">TypeParamRemover</a>&lt;'_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"enum\" href=\"stc_ts_types/enum.Type.html\" title=\"enum stc_ts_types::Type\">Type</a>&gt; for <a class=\"struct\" href=\"stc_ts_generics/type_param/remover/struct.TypeParamRemover.html\" title=\"struct stc_ts_generics::type_param::remover::TypeParamRemover\">TypeParamRemover</a>&lt;'_&gt;"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_types/struct.TypeParamDecl.html\" title=\"struct stc_ts_types::TypeParamDecl\">TypeParamDecl</a>&gt; for <a class=\"struct\" href=\"stc_ts_generics/type_param/renamer/struct.TypeParamRenamer.html\" title=\"struct stc_ts_generics::type_param::renamer::TypeParamRenamer\">TypeParamRenamer</a>"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_types/struct.MethodSignature.html\" title=\"struct stc_ts_types::MethodSignature\">MethodSignature</a>&gt; for <a class=\"struct\" href=\"stc_ts_generics/type_param/renamer/struct.TypeParamRenamer.html\" title=\"struct stc_ts_generics::type_param::renamer::TypeParamRenamer\">TypeParamRenamer</a>"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_types/struct.Function.html\" title=\"struct stc_ts_types::Function\">Function</a>&gt; for <a class=\"struct\" href=\"stc_ts_generics/type_param/renamer/struct.TypeParamRenamer.html\" title=\"struct stc_ts_generics::type_param::renamer::TypeParamRenamer\">TypeParamRenamer</a>"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"enum\" href=\"stc_ts_types/enum.Type.html\" title=\"enum stc_ts_types::Type\">Type</a>&gt; for <a class=\"struct\" href=\"stc_ts_generics/type_param/renamer/struct.TypeParamRenamer.html\" title=\"struct stc_ts_generics::type_param::renamer::TypeParamRenamer\">TypeParamRenamer</a>"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"enum\" href=\"stc_ts_types/enum.Type.html\" title=\"enum stc_ts_types::Type\">Type</a>&gt; for <a class=\"struct\" href=\"stc_ts_generics/type_param/replacer/struct.TypeParamReplacer.html\" title=\"struct stc_ts_generics::type_param::replacer::TypeParamReplacer\">TypeParamReplacer</a>"]],
"stc_ts_type_ops":[["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_types/struct.Ref.html\" title=\"struct stc_ts_types::Ref\">Ref</a>&gt; for <a class=\"struct\" href=\"stc_ts_type_ops/generalization/struct.LitGeneralizer.html\" title=\"struct stc_ts_type_ops::generalization::LitGeneralizer\">LitGeneralizer</a>"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_types/struct.Union.html\" title=\"struct stc_ts_types::Union\">Union</a>&gt; for <a class=\"struct\" href=\"stc_ts_type_ops/generalization/struct.LitGeneralizer.html\" title=\"struct stc_ts_type_ops::generalization::LitGeneralizer\">LitGeneralizer</a>"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_types/struct.Tuple.html\" title=\"struct stc_ts_types::Tuple\">Tuple</a>&gt; for <a class=\"struct\" href=\"stc_ts_type_ops/generalization/struct.LitGeneralizer.html\" title=\"struct stc_ts_type_ops::generalization::LitGeneralizer\">LitGeneralizer</a>"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"enum\" href=\"stc_ts_types/enum.Type.html\" title=\"enum stc_ts_types::Type\">Type</a>&gt; for <a class=\"struct\" href=\"stc_ts_type_ops/generalization/struct.LitGeneralizer.html\" title=\"struct stc_ts_type_ops::generalization::LitGeneralizer\">LitGeneralizer</a>"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_types/struct.Function.html\" title=\"struct stc_ts_types::Function\">Function</a>&gt; for <a class=\"struct\" href=\"stc_ts_type_ops/generalization/struct.LitGeneralizer.html\" title=\"struct stc_ts_type_ops::generalization::LitGeneralizer\">LitGeneralizer</a>"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_types/struct.Interface.html\" title=\"struct stc_ts_types::Interface\">Interface</a>&gt; for <a class=\"struct\" href=\"stc_ts_type_ops/generalization/struct.LitGeneralizer.html\" title=\"struct stc_ts_type_ops::generalization::LitGeneralizer\">LitGeneralizer</a>"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_types/struct.Class.html\" title=\"struct stc_ts_types::Class\">Class</a>&gt; for <a class=\"struct\" href=\"stc_ts_type_ops/generalization/struct.LitGeneralizer.html\" title=\"struct stc_ts_type_ops::generalization::LitGeneralizer\">LitGeneralizer</a>"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_types/struct.ClassProperty.html\" title=\"struct stc_ts_types::ClassProperty\">ClassProperty</a>&gt; for <a class=\"struct\" href=\"stc_ts_type_ops/generalization/struct.LitGeneralizer.html\" title=\"struct stc_ts_type_ops::generalization::LitGeneralizer\">LitGeneralizer</a>"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_types/struct.TypeLit.html\" title=\"struct stc_ts_types::TypeLit\">TypeLit</a>&gt; for <a class=\"struct\" href=\"stc_ts_type_ops/generalization/struct.LitGeneralizer.html\" title=\"struct stc_ts_type_ops::generalization::LitGeneralizer\">LitGeneralizer</a>"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_types/struct.Conditional.html\" title=\"struct stc_ts_types::Conditional\">Conditional</a>&gt; for <a class=\"struct\" href=\"stc_ts_type_ops/generalization/struct.LitGeneralizer.html\" title=\"struct stc_ts_type_ops::generalization::LitGeneralizer\">LitGeneralizer</a>"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"enum\" href=\"stc_ts_types/enum.Type.html\" title=\"enum stc_ts_types::Type\">Type</a>&gt; for <a class=\"struct\" href=\"stc_ts_type_ops/tuple_to_array/struct.TupleToArray.html\" title=\"struct stc_ts_type_ops::tuple_to_array::TupleToArray\">TupleToArray</a>"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"enum\" href=\"stc_ts_types/enum.Type.html\" title=\"enum stc_ts_types::Type\">Type</a>&gt; for <a class=\"struct\" href=\"stc_ts_type_ops/widen/struct.Widen.html\" title=\"struct stc_ts_type_ops::widen::Widen\">Widen</a>"],["impl <a class=\"trait\" href=\"stc_visit/fold/trait.Fold.html\" title=\"trait stc_visit::fold::Fold\">Fold</a>&lt;<a class=\"struct\" href=\"stc_ts_types/struct.PropertySignature.html\" title=\"struct stc_ts_types::PropertySignature\">PropertySignature</a>&gt; for <a class=\"struct\" href=\"stc_ts_type_ops/widen/struct.Widen.html\" title=\"struct stc_ts_type_ops::widen::Widen\">Widen</a>"]],
"stc_visit":[]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()