(function() {var implementors = {
"stc_arc_cow":[["impl&lt;T&gt; <a class=\"trait\" href=\"stc_utils/cache/trait.Freeze.html\" title=\"trait stc_utils::cache::Freeze\">Freeze</a> for <a class=\"enum\" href=\"stc_arc_cow/enum.ArcCow.html\" title=\"enum stc_arc_cow::ArcCow\">ArcCow</a>&lt;T&gt;<span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: <a class=\"trait\" href=\"swc_common/util/take/trait.Take.html\" title=\"trait swc_common::util::take::Take\">Take</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"stc_utils/cache/trait.Freeze.html\" title=\"trait stc_utils::cache::Freeze\">Freeze</a>,</span>"]],
"stc_ts_types":[["impl <a class=\"trait\" href=\"stc_utils/cache/trait.Freeze.html\" title=\"trait stc_utils::cache::Freeze\">Freeze</a> for <a class=\"struct\" href=\"stc_ts_types/struct.FnParam.html\" title=\"struct stc_ts_types::FnParam\">FnParam</a>"],["impl <a class=\"trait\" href=\"stc_utils/cache/trait.Freeze.html\" title=\"trait stc_utils::cache::Freeze\">Freeze</a> for <a class=\"struct\" href=\"stc_ts_types/struct.Interface.html\" title=\"struct stc_ts_types::Interface\">Interface</a>"],["impl <a class=\"trait\" href=\"stc_utils/cache/trait.Freeze.html\" title=\"trait stc_utils::cache::Freeze\">Freeze</a> for <a class=\"struct\" href=\"stc_ts_types/struct.TsExpr.html\" title=\"struct stc_ts_types::TsExpr\">TsExpr</a>"],["impl <a class=\"trait\" href=\"stc_utils/cache/trait.Freeze.html\" title=\"trait stc_utils::cache::Freeze\">Freeze</a> for <a class=\"enum\" href=\"stc_ts_types/enum.Type.html\" title=\"enum stc_ts_types::Type\">Type</a>"],["impl <a class=\"trait\" href=\"stc_utils/cache/trait.Freeze.html\" title=\"trait stc_utils::cache::Freeze\">Freeze</a> for <a class=\"enum\" href=\"stc_ts_types/enum.TypeElement.html\" title=\"enum stc_ts_types::TypeElement\">TypeElement</a>"],["impl <a class=\"trait\" href=\"stc_utils/cache/trait.Freeze.html\" title=\"trait stc_utils::cache::Freeze\">Freeze</a> for <a class=\"struct\" href=\"stc_ts_types/struct.TypeParam.html\" title=\"struct stc_ts_types::TypeParam\">TypeParam</a>"],["impl <a class=\"trait\" href=\"stc_utils/cache/trait.Freeze.html\" title=\"trait stc_utils::cache::Freeze\">Freeze</a> for <a class=\"struct\" href=\"stc_ts_types/struct.TypeParamDecl.html\" title=\"struct stc_ts_types::TypeParamDecl\">TypeParamDecl</a>"],["impl <a class=\"trait\" href=\"stc_utils/cache/trait.Freeze.html\" title=\"trait stc_utils::cache::Freeze\">Freeze</a> for <a class=\"struct\" href=\"stc_ts_types/struct.TypeParamInstantiation.html\" title=\"struct stc_ts_types::TypeParamInstantiation\">TypeParamInstantiation</a>"],["impl <a class=\"trait\" href=\"stc_utils/cache/trait.Freeze.html\" title=\"trait stc_utils::cache::Freeze\">Freeze</a> for <a class=\"struct\" href=\"stc_ts_types/struct.TypeOrSpread.html\" title=\"struct stc_ts_types::TypeOrSpread\">TypeOrSpread</a>"],["impl <a class=\"trait\" href=\"stc_utils/cache/trait.Freeze.html\" title=\"trait stc_utils::cache::Freeze\">Freeze</a> for <a class=\"enum\" href=\"stc_ts_types/enum.Key.html\" title=\"enum stc_ts_types::Key\">Key</a>"],["impl <a class=\"trait\" href=\"stc_utils/cache/trait.Freeze.html\" title=\"trait stc_utils::cache::Freeze\">Freeze</a> for <a class=\"struct\" href=\"stc_ts_types/struct.Enum.html\" title=\"struct stc_ts_types::Enum\">Enum</a>"],["impl <a class=\"trait\" href=\"stc_utils/cache/trait.Freeze.html\" title=\"trait stc_utils::cache::Freeze\">Freeze</a> for <a class=\"struct\" href=\"stc_ts_types/struct.ClassDef.html\" title=\"struct stc_ts_types::ClassDef\">ClassDef</a>"],["impl <a class=\"trait\" href=\"stc_utils/cache/trait.Freeze.html\" title=\"trait stc_utils::cache::Freeze\">Freeze</a> for <a class=\"struct\" href=\"stc_ts_types/struct.Mapped.html\" title=\"struct stc_ts_types::Mapped\">Mapped</a>"]],
"stc_utils":[]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()