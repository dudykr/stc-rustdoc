window.SIDEBAR_ITEMS = {"constant":[["IMPL_SPANNED_FOR_Alias",""],["IMPL_SPANNED_FOR_Array",""],["IMPL_SPANNED_FOR_CallSignature",""],["IMPL_SPANNED_FOR_Class",""],["IMPL_SPANNED_FOR_ClassDef",""],["IMPL_SPANNED_FOR_ClassMember",""],["IMPL_SPANNED_FOR_ClassProperty",""],["IMPL_SPANNED_FOR_ComputedKey",""],["IMPL_SPANNED_FOR_Conditional",""],["IMPL_SPANNED_FOR_Constructor",""],["IMPL_SPANNED_FOR_ConstructorSignature",""],["IMPL_SPANNED_FOR_Enum",""],["IMPL_SPANNED_FOR_EnumMember",""],["IMPL_SPANNED_FOR_EnumVariant",""],["IMPL_SPANNED_FOR_FnParam",""],["IMPL_SPANNED_FOR_Function",""],["IMPL_SPANNED_FOR_ImportType",""],["IMPL_SPANNED_FOR_Index",""],["IMPL_SPANNED_FOR_IndexSignature",""],["IMPL_SPANNED_FOR_IndexedAccessType",""],["IMPL_SPANNED_FOR_InferType",""],["IMPL_SPANNED_FOR_Instance",""],["IMPL_SPANNED_FOR_Interface",""],["IMPL_SPANNED_FOR_Intersection",""],["IMPL_SPANNED_FOR_Key",""],["IMPL_SPANNED_FOR_KeywordType",""],["IMPL_SPANNED_FOR_LitType",""],["IMPL_SPANNED_FOR_Mapped",""],["IMPL_SPANNED_FOR_Method",""],["IMPL_SPANNED_FOR_MethodSignature",""],["IMPL_SPANNED_FOR_Module",""],["IMPL_SPANNED_FOR_Namespace",""],["IMPL_SPANNED_FOR_OptionalType",""],["IMPL_SPANNED_FOR_Predicate",""],["IMPL_SPANNED_FOR_PrivateName",""],["IMPL_SPANNED_FOR_PropertySignature",""],["IMPL_SPANNED_FOR_QueryExpr",""],["IMPL_SPANNED_FOR_QueryType",""],["IMPL_SPANNED_FOR_Readonly",""],["IMPL_SPANNED_FOR_Ref",""],["IMPL_SPANNED_FOR_RestType",""],["IMPL_SPANNED_FOR_StaticThis",""],["IMPL_SPANNED_FOR_Symbol",""],["IMPL_SPANNED_FOR_ThisType",""],["IMPL_SPANNED_FOR_TplElem",""],["IMPL_SPANNED_FOR_TplType",""],["IMPL_SPANNED_FOR_TsExpr",""],["IMPL_SPANNED_FOR_Tuple",""],["IMPL_SPANNED_FOR_TupleElement",""],["IMPL_SPANNED_FOR_Type",""],["IMPL_SPANNED_FOR_TypeElement",""],["IMPL_SPANNED_FOR_TypeLit",""],["IMPL_SPANNED_FOR_TypeOrSpread",""],["IMPL_SPANNED_FOR_TypeParam",""],["IMPL_SPANNED_FOR_TypeParamDecl",""],["IMPL_SPANNED_FOR_TypeParamInstantiation",""],["IMPL_SPANNED_FOR_Union",""],["IMPL_SPANNED_FOR_Unique",""]],"enum":[["ClassMember",""],["IdCtx",""],["IntrinsicKind",""],["Key",""],["QueryExpr",""],["Type","A TypeScript type."],["TypeElement",""]],"fn":[["_assert_send_sync",""],["rprop_name_to_expr","This function should be used for keys."],["write_entity_name",""]],"macro":[["fold_helper","Handles folding of Arc and Static"],["impl_freeze",""],["visit_helper","Handles visiting of Arc and Static"]],"mod":[["convert",""],["id",""],["intrinsic",""],["is","Smarter version of `derive(Is)`"],["macros",""],["metadata","Rules"],["module_id",""],["name",""],["replace",""],["tracker",""],["type_id",""]],"struct":[["Accessor","Getter and setter."],["Alias",""],["AliasMetadata",""],["Array",""],["ArrayMetadata",""],["AssertCloneCheap",""],["AssertValid","Visitor which validate types."],["CallSignature",""],["CheckCheapClone",""],["Class",""],["ClassDef",""],["ClassDefMetadata",""],["ClassMetadata",""],["ClassProperty",""],["CommonTypeMetadata","Common metadata shared among [crate::Type]s."],["ComputedKey",""],["Conditional",""],["ConditionalMetadata",""],["Constructor",""],["ConstructorMetadata",""],["ConstructorSignature",""],["Enum","Enum definition."],["EnumMember",""],["EnumMetadata",""],["EnumVariant","FooEnum.A"],["EnumVariantMetadata",""],["FnParam",""],["Freezed",""],["Function",""],["FunctionMetadata",""],["Id",""],["ImportType",""],["ImportTypeMetadata",""],["Index","`keyof T`"],["IndexSignature",""],["IndexedAccessType",""],["IndexedAccessTypeMetadata",""],["InferType",""],["InferTypeMetadata",""],["Instance","Special type to denote instance of various types."],["InstanceMetadata",""],["Interface",""],["InterfaceMetadata",""],["Intersection","a & b"],["IntersectionMetadata",""],["Iter",""],["KeywordType",""],["KeywordTypeMetadata",""],["LitType",""],["LitTypeMetadata",""],["Mapped",""],["MappedMetadata",""],["Method","A class method."],["MethodSignature",""],["Module",""],["ModuleTypeData",""],["ModuleTypeMetadata",""],["Namespace",""],["NamespaceTypeMetadata",""],["OperatorMetadata",""],["OptionalType",""],["OptionalTypeMetadata",""],["Predicate",""],["PredicateMetadata",""],["PrivateName",""],["PropertySignature",""],["QueryType",""],["QueryTypeMetadata",""],["Readonly","`readonly T`"],["Ref",""],["RefMetadata",""],["RestType","Type of form `...T` ."],["RestTypeMetadata",""],["StaticThis",""],["StaticThisMetadata",""],["StringMapping",""],["StringMappingMetadata",""],["Symbol",""],["SymbolMetadata",""],["ThisType",""],["ThisTypeMetadata",""],["TplElem",""],["TplType",""],["TplTypeMetadata",""],["TsExpr","Typescript expression with type arguments"],["Tuple","This type has a length of n to infinite."],["TupleElement",""],["TupleMetadata",""],["TypeElMetadata",""],["TypeLit",""],["TypeLitMetadata",""],["TypeOrSpread",""],["TypeParam","A type parameter"],["TypeParamDecl",""],["TypeParamInstantiation",""],["TypeParamMetadata",""],["Union","a | b"],["UnionMetadata",""],["Unique","Currently only used for `unique symbol`."],["ValidityChecker",""]],"trait":[["TypeIterExt",""],["TypeMetadata",""],["Valid",""]]};